[1mdiff --git a/handler.py b/handler.py[m
[1mindex a4a0f55..e6f3c53 100644[m
[1m--- a/handler.py[m
[1m+++ b/handler.py[m
[36m@@ -1,5 +1,4 @@[m
 import runpod[m
[31m-from runpod.serverless.utils import rp_upload[m
 import os[m
 import websocket[m
 import base64[m
[36m@@ -8,18 +7,57 @@[m [mimport uuid[m
 import logging[m
 import urllib.request[m
 import urllib.parse[m
[31m-import binascii # Import for Base64 error handling[m
[32m+[m[32mimport binascii[m
 import subprocess[m
 import time[m
 import librosa[m
[32m+[m[32mimport requests[m
 # Logging configuration[m
 logging.basicConfig(level=logging.INFO)[m
 logger = logging.getLogger(__name__)[m
 [m
[32m+[m[32m# Supabase configuration[m
[32m+[m[32mSUPABASE_URL = os.getenv('SUPABASE_URL')[m
[32m+[m[32mSUPABASE_SERVICE_ROLE_KEY = os.getenv('SUPABASE_SERVICE_ROLE_KEY')[m
[32m+[m[32mSUPABASE_BUCKET_NAME = os.getenv('SUPABASE_BUCKET_NAME', 'youtube-agent')[m
 [m
 server_address = os.getenv('SERVER_ADDRESS', '127.0.0.1')[m
 client_id = str(uuid.uuid4())[m
 [m
[32m+[m[32mdef upload_to_supabase(file_path, filename):[m
[32m+[m[32m    """Upload file to Supabase storage and return public URL"""[m
[32m+[m[32m    try:[m
[32m+[m[32m        # Read the file[m
[32m+[m[32m        with open(file_path, 'rb') as f:[m
[32m+[m[32m            file_data = f.read()[m
[32m+[m[41m        [m
[32m+[m[32m        # Construct the storage path[m
[32m+[m[32m        storage_path = f"animations/{filename}"[m
[32m+[m[41m        [m
[32m+[m[32m        # Upload to Supabase storage[m
[32m+[m[32m        upload_url = f"{SUPABASE_URL}/storage/v1/object/{SUPABASE_BUCKET_NAME}/{storage_path}"[m
[32m+[m[41m        [m
[32m+[m[32m        headers = {[m
[32m+[m[32m            'Authorization': f'Bearer {SUPABASE_SERVICE_ROLE_KEY}',[m
[32m+[m[32m            'Content-Type': 'video/mp4',[m
[32m+[m[32m            'x-upsert': 'true'  # Overwrite if exists[m
[32m+[m[32m        }[m
[32m+[m[41m        [m
[32m+[m[32m        response = requests.post(upload_url, headers=headers, data=file_data)[m
[32m+[m[41m        [m
[32m+[m[32m        if response.status_code in [200, 201]:[m
[32m+[m[32m            # Construct public URL[m
[32m+[m[32m            public_url = f"{SUPABASE_URL}/storage/v1/object/public/{SUPABASE_BUCKET_NAME}/{storage_path}"[m
[32m+[m[32m            logger.info(f"‚úÖ Successfully uploaded to Supabase: {public_url}")[m
[32m+[m[32m            return public_url[m
[32m+[m[32m        else:[m
[32m+[m[32m            logger.error(f"‚ùå Supabase upload failed: {response.status_code} - {response.text}")[m
[32m+[m[32m            raise Exception(f"Supabase upload failed: {response.text}")[m
[32m+[m[41m            [m
[32m+[m[32m    except Exception as e:[m
[32m+[m[32m        logger.error(f"‚ùå Error uploading to Supabase: {e}")[m
[32m+[m[32m        raise[m
[32m+[m
 def download_file_from_url(url, output_path):[m
     """Function to download file from URL"""[m
     try:[m
[36m@@ -135,24 +173,9 @@[m [mdef get_videos(ws, prompt, input_type="image", person_count="single"):[m
         videos_output = [][m
         if 'gifs' in node_output:[m
             for video in node_output['gifs']:[m
[31m-                # Upload to RunPod S3 and get full URL[m
[31m-                try:[m
[31m-                    # Try upload_file which returns full URL[m
[31m-                    video_url = rp_upload.upload_file([m
[31m-                        file_path=video['fullpath'],[m
[31m-                        file_name=f"output_{uuid.uuid4()}.mp4"[m
[31m-                    )[m
[31m-                except Exception as e:[m
[31m-                    logger.warning(f"upload_file failed: {e}, trying upload_file_to_bucket")[m
[31m-                    # Fallback to upload_file_to_bucket[m
[31m-                    bucket_path = rp_upload.upload_file_to_bucket([m
[31m-                        file_name=f"output_{uuid.uuid4()}.mp4",[m
[31m-                        file_location=video['fullpath'][m
[31m-                    )[m
[31m-                    # Construct full URL from bucket path[m
[31m-                    video_url = f"https://{os.getenv('RUNPOD_POD_ID', 'runpod')}.runpod.io/{bucket_path}"[m
[31m-                [m
[31m-                logger.info(f"Video uploaded: {video_url}")[m
[32m+[m[32m                # Upload to Supabase storage[m
[32m+[m[32m                filename = f"output_{uuid.uuid4()}.mp4"[m
[32m+[m[32m                video_url = upload_to_supabase(video['fullpath'], filename)[m
                 videos_output.append(video_url)[m
         output_videos[node_id] = videos_output[m
 [m
